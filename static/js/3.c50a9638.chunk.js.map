{"version":3,"sources":["component/Profile/ProfileInfo/ProfileInfo.module.css","component/Profile/Profile.module.css","component/Profile/MyPosts/MyPosts.module.css","component/Profile/MyPosts/Posts/Post.module.css","../node_modules/use-react-router/use-react-router.js","../node_modules/use-force-update/use-force-update.js","component/hoc/withAurhRedirect.tsx","component/Profile/MyPosts/Posts/Post.tsx","component/Profile/MyPosts/MyPosts.tsx","component/Profile/ProfileInfo/ProfileStatusWithHook.tsx","component/Profile/ProfileInfo/ContactProfile.tsx","component/Profile/ProfileInfo/ContactProfileFrorm.tsx","component/Profile/ProfileInfo/ProfileInfo.tsx","component/Profile/ProfContainer.tsx"],"names":["module","exports","Object","defineProperty","value","react_1","require","react_router_1","use_force_update_1","INCORRECT_VERSION_ERROR","Error","MISSING_CONTEXT_ERROR","default","__RouterContext","context","useContext","forceUpdate","useEffect","history","listen","__read","this","o","n","m","Symbol","iterator","r","e","i","call","ar","next","done","push","error","dispatch","useState","create","useCallback","mapStateToPropsForRedirect","state","isAuth","auth","Post","memo","post","deletedPost","ii","Date","toLocaleTimeString","className","s","img","alt","src","imgFor","name","count","onClick","id","MyPosts","props","useDispatch","postsData","useSelector","profilePage","action","postsElements","map","item","postsBlock","initialValues","postText","onSubmit","str","resetForm","addCreactorPost","component","placeholder","type","ProfileStatusWithHook","editMode","setEditMode","status","setStatus","onDoubleClick","onChange","currentTarget","onBlur","updateStatusTh","autoFocus","ContactProfile","pf","isOwner","activeEditMode","containerContacts","fullName","lookingForAJobDescription","aboutMe","contacts","keys","key","ContactProfileFrorm","editProfileData","validSchem","Yup","shape","min","required","InitialValues","validationSchema","obj","adoutUser","errors","touched","handleChange","disabled","isValid","ProfileInfo","profile","Preloader","wrapper","pagePhoto","photos","small","iconUser","userIcon","file","target","files","length","sendPhoto","objProperti","editProfile","ProfConteiner","idUser","userId","useReactRouter","refreshProfile","match","params","getProfileTh","getProfile","getStatusTh","getStatus","content","compose","withRouter","Component","RedirectComponent","to","React","connect"],"mappings":"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","file":"static/js/3.c50a9638.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"imgeing\":\"ProfileInfo_imgeing__1h9kc\",\"wrapper\":\"ProfileInfo_wrapper__1EHBP\",\"pagePhoto\":\"ProfileInfo_pagePhoto__1kQwM\",\"adoutUser\":\"ProfileInfo_adoutUser__2WDdn\",\"status\":\"ProfileInfo_status__2p7ZZ\",\"userIcon\":\"ProfileInfo_userIcon__3dmZD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__OXd_j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__297N5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"Post_img__3RbL1\"};","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar react_1 = require(\"react\");\nvar react_router_1 = require(\"react-router\");\nvar use_force_update_1 = require(\"use-force-update\");\nvar INCORRECT_VERSION_ERROR = new Error('use-react-router may only be used with react-router@^5.');\nvar MISSING_CONTEXT_ERROR = new Error('useReactRouter may only be called within a <Router /> context.');\nfunction useRouter() {\n    if (!react_router_1.__RouterContext) {\n        throw INCORRECT_VERSION_ERROR;\n    }\n    var context = react_1.useContext(react_router_1.__RouterContext);\n    if (!context) {\n        throw MISSING_CONTEXT_ERROR;\n    }\n    var forceUpdate = use_force_update_1.default();\n    react_1.useEffect(function () {\n        return context.history.listen(forceUpdate);\n    }, [context]);\n    return context;\n}\nexports.default = useRouter;\n","\"use strict\";\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar react_1 = require(\"react\");\nfunction useForceUpdate() {\n    var _a = __read(react_1.useState(Object.create(null)), 2), dispatch = _a[1];\n    var memoizedDispatch = react_1.useCallback(function () {\n        dispatch(Object.create(null));\n    }, [dispatch]);\n    return memoizedDispatch;\n}\nexports.default = useForceUpdate;\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { AppStateType } from \"../../redux/reduxStore\";\r\n\r\n\r\ntype MapStatePropsType = {\r\n\tisAuth: boolean | null\r\n}\r\nlet mapStateToPropsForRedirect = (state: AppStateType): MapStatePropsType => {\r\n\treturn {\r\n\t\tisAuth: state.auth.isAuth\r\n\t}\r\n};\r\n\r\nexport const withAuthRedirect = (Component: React.ComponentType) => {\r\n\tclass RedirectComponent extends React.Component<MapStatePropsType> {\r\n\t\trender() {\r\n\t\t\tif (!this.props.isAuth) return <Redirect to='/login' />\r\n\r\n\t\t\treturn <Component {...this.props} />\r\n\t\t}\r\n\t}\r\n\r\n\tlet ConnectRedirectCommponent = connect<MapStatePropsType, {}, {}, AppStateType>(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n\treturn ConnectRedirectCommponent;\r\n}","import { memo } from 'react';\r\nimport s from './Post.module.css';\r\nimport imgFor from '../../../../img/img.webp'\r\nimport { PostDataType } from '../../../../commonType/commonType';\r\n\r\ntype PropsType = {\r\n\tpost: PostDataType\r\n\tdeletedPost: (id: number) => void\r\n}\r\n\r\nconst Post: React.FC<PropsType> = memo(({ post, deletedPost }) => {\r\n\tconst ii = new Date().toLocaleTimeString();\r\n\tlet response = \"abubandit\";\r\n\r\n\treturn (\r\n\r\n\t\t<div>\r\n\t\t\t<div>{response}</div>\r\n\t\t\t<img className={s.img} alt='' src={imgFor} />\r\n\t\t\t<span>{`${post.name} `}</span>\r\n\t\t\t<span>hi {ii}</span>\r\n\t\t\t<div>\r\n\t\t\t\t<span>{post.value}</span>\r\n\t\t\t\t<span>{post.count} like</span>\r\n\t\t\t</div>\r\n\t\t\t<button onClick={() => deletedPost(post.id)}>Remove</button>\r\n\r\n\t\t</div>\r\n\t);\r\n})\r\n\r\nexport default Post;","import s from './MyPosts.module.css';\r\nimport Post from './Posts/Post';\r\nimport { Form, Formik, Field } from 'formik';\r\nimport { memo } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { action } from '../../../redux/profilePageReduser';\r\nimport { AppStateType } from '../../../redux/reduxStore';\r\n\r\n\r\ntype PropsType = {}\r\ntype FormType = {\r\n\tpostText: string\r\n}\r\nexport const MyPosts: React.FC<PropsType> = memo(props => {\r\n\r\n\tconst dispatch = useDispatch()\r\n\tconst addPost = (str: string) => dispatch(action.addCreactorPost(str))\r\n\tconst postsData = useSelector((state: AppStateType) => state.profilePage.postsData)\r\n\tconst deletedPost = (id: number) => dispatch(action.deletedPost(id))\r\n\r\n\tlet postsElements = postsData.map(item =>\r\n\t\t<Post key={item.id} post={item} deletedPost={deletedPost} />);\r\n\tconst initialValues: FormType = {\r\n\t\tpostText: '',\r\n\t}\r\n\r\n\treturn (\r\n\r\n\t\t<div className={s.postsBlock}>\r\n\t\t\tMy post\r\n\t\t\t<Formik\r\n\t\t\t\tinitialValues={initialValues}\r\n\r\n\t\t\t\tonSubmit={(value, { resetForm }) => {\r\n\t\t\t\t\taddPost(value.postText);\r\n\t\t\t\t\tresetForm();\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\r\n\t\t\t\t{(props) => (\r\n\t\t\t\t\t<Form>\r\n\t\t\t\t\t\t<Field component={'textarea'} name={'postText'} placeholder={'write any one'} />\r\n\t\t\t\t\t\t<button type='submit'>ADD</button>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t)}\r\n\t\t\t</Formik>\r\n\t\t\t{ postsElements}\r\n\t\t</div >\r\n\t);\r\n})\r\n\r\n","import s from './ProfileInfo.module.css';\r\nimport React, { ChangeEvent, useState } from 'react';\r\n\r\ntype PropsType = {\r\n\tstatus: string\r\n\tupdateStatusTh: (status: string) => void\r\n\r\n}\r\nconst ProfileStatusWithHook: React.FC<PropsType> = (props) => {\r\n\r\n\tlet [editMode, setEditMode] = useState(false);\r\n\tlet [status, setStatus] = useState(props.status)\r\n\r\n\tconst activeEditMode = () => {\r\n\t\tsetEditMode(true);\r\n\t}\r\n\tconst diactiveEditMode = () => {\r\n\t\tsetEditMode(false);\r\n\t\tprops.updateStatusTh(status);\r\n\t}\r\n\r\n\tconst onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetStatus(e.currentTarget.value);\r\n\t}\r\n\r\n\treturn <div className={s.status}>\r\n\t\t{!editMode &&\r\n\t\t\t<div>\r\n\t\t\t\t<span onDoubleClick={activeEditMode} >{'Status: ' + props.status}</span>\r\n\t\t\t</div >\r\n\t\t}\r\n\t\t{editMode &&\r\n\t\t\t<div>\r\n\t\t\t\t<input onChange={onStatusChange} onBlur={diactiveEditMode} autoFocus={true} placeholder={'edit'} />\r\n\t\t\t</div >\r\n\t\t}\r\n\r\n\t</div >\r\n}\r\n\r\n\r\n\r\nexport default ProfileStatusWithHook;","import { memo } from 'react';\r\nimport { ProfileType } from '../../../commonType/commonType';\r\nimport s from './ProfileInfo.module.css';\r\ntype PropsType = {\r\n\tpf: ProfileType\r\n\tisOwner: boolean\r\n\tactiveEditMode: () => void\r\n}\r\nconst ContactProfile: React.FC<PropsType> = memo(({ pf, isOwner, activeEditMode }) => {\r\n\r\n\treturn (\r\n\t\t<div className={s.containerContacts}>\r\n\t\t\t<div className={s.containerContacts}>\r\n\t\t\t\t<div><b>Name: </b> {pf.fullName}</div>\r\n\t\t\t\t<div><b>My jobs possition: </b> {pf.lookingForAJobDescription}</div>\r\n\t\t\t\t<div><b>About me: </b>{pf.aboutMe}</div>\r\n\t\t\t</div>\r\n\t\t\t<div className={s.contacts}>\r\n\t\t\t\t<div><b>Contacts</b>: {\r\n\t\t\t\t\tObject\r\n\t\t\t\t\t\t.keys(pf.contacts)\r\n\t\t\t\t\t\t.map(key => {\r\n\t\t\t\t\t\t\treturn <div key={key} >\r\n\t\t\t\t\t\t\t\t<b>{key}</b>:{pf.contacts[key as any]}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t{ isOwner && <button type={'submit'} onClick={activeEditMode} >Click me!</button>}\r\n\t\t</div >\r\n\r\n\r\n\t)\r\n})\r\n\r\nexport default ContactProfile;\r\n","import { Formik, Form, Field } from 'formik';\r\nimport s from './ProfileInfo.module.css';\r\nimport * as Yup from \"yup\";\r\nimport { ContactsType, ProfileType } from '../../../commonType/commonType';\r\n\r\ntype PropsType = {\r\n\tpf: ProfileType\r\n\tisOwner: boolean\r\n\teditProfileData: (obj: InitialVFormik) => void\r\n}\r\nexport type InitialVFormik = {\r\n\tfullName: string\r\n\tlookingForAJobDescription: string\r\n\taboutMe: string\r\n\tcontacts?: ContactsType\r\n\r\n}\r\nconst ContactProfileFrorm: React.FC<PropsType> = ({ pf, editProfileData }) => {\r\n\r\n\tconst validSchem = Yup.object().shape({\r\n\t\tfullName: Yup.string().min(5).required(\"invalid\")\r\n\t})\r\n\tconst InitialValues: InitialVFormik = {\r\n\t\tfullName: pf.fullName,\r\n\t\tlookingForAJobDescription: pf.lookingForAJobDescription,\r\n\t\taboutMe: pf.aboutMe,\r\n\t}\r\n\treturn (\r\n\t\t<div className={s.containerContacts}>\r\n\t\t\t<Formik\r\n\t\t\t\tinitialValues={InitialValues}\r\n\t\t\t\tvalidationSchema={validSchem}\r\n\t\t\t\tonSubmit={(obj) => {\r\n\t\t\t\t\teditProfileData(obj);\r\n\t\t\t\t}} >{(props) => (\r\n\t\t\t\t\t<Form>\r\n\t\t\t\t\t\t<div className={s.adoutUser}>\r\n\t\t\t\t\t\t\t<b>About me: </b><Field name={'aboutMe'} /></div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<b>Name: </b> <Field name={'fullName'} /></div>\r\n\t\t\t\t\t\t{props.errors.fullName && props.touched.fullName ? (<div>{props.errors.fullName}</div>) : null}\r\n\t\t\t\t\t\t<div><b>My jobs possition: </b> <Field name={'lookingForAJobDescription'}\r\n\t\t\t\t\t\t\tcomponent={'textarea'} /></div>\r\n\r\n\r\n\t\t\t\t\t\t<div className={s.contacts}>\r\n\t\t\t\t\t\t\t<div><b>Contacts</b>: {Object.keys(pf.contacts).map((key: string) => {\r\n\t\t\t\t\t\t\t\treturn <div key={key}>\r\n\t\t\t\t\t\t\t\t\t<b>{key}</b>: <input name={'contacts.' + key} onChange={props.handleChange} />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div><button type={'submit'} disabled={!props.isValid}>Save</button></div>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t)\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t</Formik >\r\n\t\t</div >\r\n\t)\r\n}\r\n\r\n\r\nexport default ContactProfileFrorm;","import Preloader from '../../common/Preloader/Preloader';\r\nimport s from './ProfileInfo.module.css';\r\nimport ProfileStatusWithHook from './ProfileStatusWithHook';\r\nimport iconUser from './../../../img/images.png';\r\nimport ContactProfile from './ContactProfile';\r\nimport React, { ChangeEvent, memo, useState } from 'react';\r\nimport ContactProfileFrorm, { InitialVFormik } from \"./ContactProfileFrorm\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { AppStateType } from '../../../redux/reduxStore';\r\nimport { editProfile, sendPhoto, updateStatusTh } from '../../../redux/profilePageReduser';\r\n\r\n\r\ntype PropsType = { isOwner: boolean }\r\nexport const ProfileInfo: React.FC<PropsType> = memo((props) => {\r\n\r\n\tconst profile = useSelector((state: AppStateType) => state.profilePage.profile)\r\n\tconst status = useSelector((state: AppStateType) => state.profilePage.status)\r\n\r\n\tconst dispatch = useDispatch()\r\n\tconst editProf = (objProperti: InitialVFormik) => { dispatch(editProfile(objProperti)) }\r\n\tconst sendPhotoT = (file: File) => { dispatch(sendPhoto(file)) }\r\n\tconst updateStatusThT = (status: string) => { dispatch(updateStatusTh(status)) }\r\n\r\n\r\n\tlet [editMode, setEditMode] = useState(false);\r\n\r\n\tif (!profile) {\r\n\t\treturn <Preloader />\r\n\t}\r\n\tconst selectFile = (e: ChangeEvent<HTMLInputElement>) => {\r\n\t\tif (e.target.files?.length) {\r\n\t\t\tsendPhotoT(e.target.files[0])\r\n\t\t}\r\n\t}\r\n\r\n\tconst editProfileData = (obj: InitialVFormik) => {\r\n\t\teditProf(obj);\r\n\t\tsetEditMode(false);\r\n\t}\r\n\r\n\tconst activeEditMode = () => {\r\n\t\tsetEditMode(true);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={s.wrapper}>\r\n\t\t\t<div>\r\n\t\t\t\t<div className={s.pagePhoto}>\r\n\t\t\t\t\t<img alt='' src={profile.photos.small || iconUser} className={s.userIcon} />\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t{props.isOwner && <input type={'file'} onChange={selectFile} />}\r\n\t\t\t</div>\r\n\r\n\t\t\t{editMode ? <ContactProfileFrorm isOwner={props.isOwner} pf={profile} editProfileData={editProfileData} />\r\n\t\t\t\t: <ContactProfile isOwner={props.isOwner} pf={profile} activeEditMode={activeEditMode} />}\r\n\r\n\t\t\t<ProfileStatusWithHook status={status} updateStatusTh={updateStatusThT} />\r\n\t\t</div >\r\n\t);\r\n})\r\n","import React, { useEffect } from 'react';\r\nimport s from './Profile.module.css';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getProfileTh, getStatusTh, } from '../../redux/profilePageReduser';\r\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\r\nimport { withAuthRedirect } from '../hoc/withAurhRedirect';\r\nimport { compose } from 'redux';\r\nimport { AppStateType } from '../../redux/reduxStore';\r\nimport { MyPosts } from './MyPosts/MyPosts';\r\nimport { ProfileInfo } from './ProfileInfo/ProfileInfo';\r\nimport useReactRouter from 'use-react-router';\r\n\r\n\r\ntype PropsType = RouteComponentProps<RoutePropsType>\r\ntype RoutePropsType = {\r\n\tuserId: string\r\n}\r\n\r\nexport const ProfConteiner: React.FC<PropsType> = (props) => {\r\n\tconst idUser = useSelector((state: AppStateType) => state.auth.userId)\r\n\tconst { history } = useReactRouter();\r\n\r\n\tconst dispatch = useDispatch()\r\n\tconst getProfile = (userId: number) => { dispatch(getProfileTh(userId)) }\r\n\tconst getStatus = (userId: number) => { dispatch(getStatusTh(userId)) }\r\n\r\n\tconst refreshProfile = () => {\r\n\t\tlet userId: number | null = +props.match.params?.userId;\r\n\t\tif (!userId) {\r\n\t\t\tuserId = idUser\r\n\t\t\tif (!idUser) {\r\n\t\t\t\thistory.push('/login')\r\n\t\t\t}\r\n\t\t}\r\n\t\tgetProfile(userId as number);\r\n\t\tgetStatus(userId as number);\r\n\t}\r\n\tuseEffect(() => { //ВОСПРИНИМАТЬ КАК СИНХРОНИЗАЦИЮ\r\n\t\trefreshProfile()\r\n\t}, [])\r\n\r\n\tuseEffect(() => { refreshProfile() }, [props.match.params.userId])\r\n\treturn (\r\n\t\t<div className={s.content} >\r\n\t\t\t<ProfileInfo isOwner={!props.match.params.userId} />\r\n\t\t\t<MyPosts />\r\n\t\t</div >\r\n\t)\r\n}\r\n\r\nexport default compose<React.ComponentType>(\r\n\twithRouter,\r\n\twithAuthRedirect,\r\n)(ProfConteiner);"],"sourceRoot":""}