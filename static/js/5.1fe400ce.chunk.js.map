{"version":3,"sources":["component/pages/ChatPages.tsx"],"names":["wsChanel","WebSocket","Chat","ChatMessages","AddMessageForm","useState","messages","setMessage","useEffect","addEventListener","e","newMessage","JSON","parse","data","prevMessage","style","height","overflowY","map","m","index","Message","message","width","src","photo","alt","userName","initialValues","body","onSubmit","values","resetForm","send","name","type","ChatPages"],"mappings":"kJAMMA,EAAW,IAAIC,UAAU,gEAQzBC,EAAiB,WACtB,OAAO,gCACN,cAACC,EAAD,IACA,cAACC,EAAD,QAWID,EAAyB,WAAO,IAAD,EAELE,mBAA6B,IAFxB,mBAE7BC,EAF6B,KAEnBC,EAFmB,KAkBpC,OAdAC,qBAAU,WACTR,EAASS,iBAAiB,QAAQ,iBAGhC,IAGHD,qBAAU,WACTR,EAASS,iBAAiB,WAAW,SAACC,GACrC,IAAMC,EAAaC,KAAKC,MAAMH,EAAEI,MAChCP,GAAW,SAACQ,GAAD,4BAAqBA,GAArB,YAAqCJ,YAE/C,IAGF,qBAAKK,MAAO,CAAEC,OAAQ,QAASC,UAAW,QAA1C,SACGZ,EAASa,KAAI,SAACC,EAAQC,GAAT,OAAmB,cAACC,EAAD,CAAqBC,QAASH,GAAhBC,SAQ7CC,EAAiC,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAGzC,OACC,gCACC,qBAAKC,MAAO,GAAIC,IAAKF,EAAQG,MAAOC,IAAI,KACvCJ,EAAQK,SACT,8BACEL,EAAQA,UAEV,2BAKGnB,EAA2B,WAChC,OACC,8BACC,cAAC,IAAD,CACCyB,cAAe,CAAEC,KAAM,IACvBC,SAAU,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UACpBjC,EAASkC,KAAKF,EAAOF,MACrBG,KAJF,SAOE,WACD,OAAO,eAAC,IAAD,WACN,cAAC,IAAD,CAAOE,KAAK,OAAOC,KAAM,UACzB,wBAAQA,KAAM,SAAd,2BAWUC,UAvFa,WAC3B,OACC,cAACnC,EAAD","file":"static/js/5.1fe400ce.chunk.js","sourcesContent":["\r\nimport { Field, Formik, Form } from \"formik\"\r\nimport { useEffect, useState } from \"react\"\r\n\r\n\r\n\r\nconst wsChanel = new WebSocket('wss://social-network.samuraijs.com/handlers/ChatHandler.ashx')\r\n\r\nconst ChatPages: React.FC = () => {\r\n\treturn (\r\n\t\t<Chat />\r\n\t)\r\n}\r\n\r\nconst Chat: React.FC = () => {\r\n\treturn <div>\r\n\t\t<ChatMessages />\r\n\t\t<AddMessageForm />\r\n\t</div>\r\n}\r\n\r\ntype ChatMessagesType = {\r\n\tmessage: string\r\n\tphoto: string\r\n\tuserId: number\r\n\tuserName: string\r\n}\r\n\r\nconst ChatMessages: React.FC = () => {\r\n\r\n\tconst [messages, setMessage] = useState<ChatMessagesType[]>([]) //our LS  \r\n\r\n\tuseEffect(() => {\r\n\t\twsChanel.addEventListener('open', () => {\r\n\r\n\t\t})\r\n\t}, [])\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\twsChanel.addEventListener('message', (e: MessageEvent) => { //get message into our LS \r\n\t\t\tconst newMessage = JSON.parse(e.data)\r\n\t\t\tsetMessage((prevMessage) => [...prevMessage, ...newMessage]) //переписали ф-ю сетМесадж, в него прийдет прошлый месседж логика переобразования LS\r\n\t\t})\r\n\t}, [])\r\n\r\n\treturn (\r\n\t\t<div style={{ height: '400px', overflowY: 'auto' }} >\r\n\t\t\t{ messages.map((m: any, index) => <Message key={index} message={m} />)}\r\n\t\t</div>\r\n\r\n\t)\r\n}\r\ntype MessageType = {\r\n\tmessage: ChatMessagesType\r\n}\r\nconst Message: React.FC<MessageType> = ({ message }) => {\r\n\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<img width={50} src={message.photo} alt=\"\" />\r\n\t\t\t{message.userName}\r\n\t\t\t<div>\r\n\t\t\t\t{message.message}\r\n\t\t\t</div>\r\n\t\t\t<hr />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst AddMessageForm: React.FC = () => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Formik\r\n\t\t\t\tinitialValues={{ body: \"\" }}\r\n\t\t\t\tonSubmit={(values, { resetForm }) => {\r\n\t\t\t\t\twsChanel.send(values.body)\r\n\t\t\t\t\tresetForm()\r\n\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t>{() => {\r\n\t\t\t\treturn <Form>\r\n\t\t\t\t\t<Field name=\"body\" type={'input'} />\r\n\t\t\t\t\t<button type={'submit'}>Send</button>\r\n\t\t\t\t</Form>\r\n\r\n\t\t\t}}\r\n\t\t\t</Formik>\r\n\t\t</div>\r\n\r\n\t)\r\n}\r\n\r\n\r\nexport default ChatPages;"],"sourceRoot":""}