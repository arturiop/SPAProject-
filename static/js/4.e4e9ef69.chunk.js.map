{"version":3,"sources":["component/Diaologs/Dialogs.module.css","component/Diaologs/Messages/Messages.module.css","component/Diaologs/DialogItem/DialogsItem.tsx","component/Diaologs/Messages/Messages.tsx","component/Diaologs/Dialogs.tsx"],"names":["module","exports","DialogItem","dialog","path","id","imgPath","imagePath","className","s","img","src","alt","activeClassName","active","to","name","Messages","message","value","Dialogs","dispatch","useDispatch","dialogsData","useSelector","state","dialogsPage","messagesData","dialogElements","map","messagesElements","dialogs","dialogItem","initialValues","onSubmit","str","resetForm","addCreactorMessage","props","placeholder","type"],"mappings":"mFACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,OAAS,wBAAwB,OAAS,wBAAwB,IAAM,qBAAqB,KAAO,sBAAsB,SAAW,0BAA0B,QAAU,2B,oBCA9ND,EAAOC,QAAU,CAAC,QAAU,4B,6ECiBbC,EAZyB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACtCC,EAAO,YAAcD,EAAOE,GAC5BC,EAAUH,EAAOI,UAErB,OACC,sBAAKC,UAAWC,IAAEN,OAAlB,UACC,qBAAKK,UAAWC,IAAEC,IAAKC,IAAKL,EAASM,IAAK,KAC1C,cAAC,IAAD,CAASC,gBAAiBJ,IAAEK,OAAQC,GAAIX,EAAxC,SAA+CD,EAAOa,W,kBCC1CC,EARuB,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAExC,OACC,qBAAKV,UAAWC,IAAES,QAAlB,SACEA,EAAQC,S,gCC0CGC,UA1CW,WAEzB,IAAMC,EAAWC,cACXC,EAAcC,aAAY,SAACC,GAAD,OAAyBA,EAAMC,YAAYH,eACrEI,EAAeH,aAAY,SAACC,GAAD,OAAyBA,EAAMC,YAAYC,gBAExEC,EAAiBL,EACnBM,KAAI,SAAC1B,GAAD,OAAwB,cAAC,EAAD,CAA4BA,OAAQA,GAAnBA,EAAOE,OAElDyB,EAAmBH,EACrBE,KAAI,SAACX,GAAD,OAA0B,cAAC,EAAD,CAA2BA,QAASA,GAArBA,EAAQb,OAEvD,OAEC,sBAAKG,UAAWC,IAAEsB,QAAlB,UACC,qBAAKvB,UAAWC,IAAEuB,WAAlB,SACEJ,IAEF,sBAAKpB,UAAWC,IAAES,QAAlB,UACEY,EAED,cAAC,IAAD,CACCG,cAAe,CACdf,QAAS,IAEVgB,SAAU,SAACf,EAAD,GAA2B,IApBnBgB,EAoBEC,EAAgB,EAAhBA,UApBFD,EAqBJhB,EAAMD,QArBcG,EAASgB,YAAmBF,IAsB7DC,KANF,SASE,SAACE,GAAD,OACA,eAAC,IAAD,WACC,cAAC,IAAD,CAAOtB,KAAM,UAAWuB,YAAa,kBACrC,wBAAQC,KAAM,SAAd","file":"static/js/4.e4e9ef69.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3QmSR\",\"dialog\":\"Dialogs_dialog__2pRvV\",\"active\":\"Dialogs_active__3jRc3\",\"img\":\"Dialogs_img__1Pgd6\",\"area\":\"Dialogs_area__3447_\",\"forSends\":\"Dialogs_forSends__1LUc5\",\"message\":\"Dialogs_message__1KJRL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Messages_message__2_ine\"};","import { NavLink } from 'react-router-dom';\r\nimport { DialogType } from '../../../redux/dialogdsPageReduser';\r\nimport s from './../Dialogs.module.css';\r\ntype PropsType = {\r\n\tdialog: DialogType\r\n}\r\nconst DialogItem: React.FC<PropsType> = ({ dialog }) => {\r\n\tlet path = \"/dialogs/\" + dialog.id;\r\n\tlet imgPath = dialog.imagePath;\r\n\r\n\treturn (\r\n\t\t<div className={s.dialog}>\r\n\t\t\t<img className={s.img} src={imgPath} alt={''} />\r\n\t\t\t<NavLink activeClassName={s.active} to={path}>{dialog.name}</NavLink>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default DialogItem;","import { MessageType } from '../../../redux/dialogdsPageReduser';\r\nimport s from './Messages.module.css';\r\n\r\ntype PropsType = {\r\n\tmessage: MessageType\r\n}\r\nconst Messages: React.FC<PropsType> = ({ message }) => {\r\n\r\n\treturn (\r\n\t\t<div className={s.message}>\r\n\t\t\t{message.value}\r\n\t\t</div>\r\n\t);\r\n}\r\nexport default Messages;","import DialogItem from './DialogItem/DialogsItem';\r\nimport s from './Dialogs.module.css';\r\nimport Messages from './Messages/Messages';\r\nimport React from 'react';\r\nimport { Form, Formik, Field } from 'formik';\r\nimport { DialogType, MessageType, addCreactorMessage } from '../../redux/dialogdsPageReduser';\r\nimport { AppStateType } from '../../redux/reduxStore';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\n\r\nconst Dialogs: React.FC = () => {\r\n\r\n\tconst dispatch = useDispatch()\r\n\tconst dialogsData = useSelector((state: AppStateType) => state.dialogsPage.dialogsData)\r\n\tconst messagesData = useSelector((state: AppStateType) => state.dialogsPage.messagesData)\r\n\tconst newMessagess = (str: string) => dispatch(addCreactorMessage(str))\r\n\tlet dialogElements = dialogsData\r\n\t\t.map((dialog: DialogType) => <DialogItem key={dialog.id} dialog={dialog} />);\r\n\r\n\tlet messagesElements = messagesData\r\n\t\t.map((message: MessageType) => <Messages key={message.id} message={message} />);\r\n\r\n\treturn (\r\n\r\n\t\t<div className={s.dialogs}>\r\n\t\t\t<div className={s.dialogItem}>\r\n\t\t\t\t{dialogElements}\r\n\t\t\t</div>\r\n\t\t\t<div className={s.message}>\r\n\t\t\t\t{messagesElements}\r\n\r\n\t\t\t\t<Formik\r\n\t\t\t\t\tinitialValues={{\r\n\t\t\t\t\t\tmessage: '',\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tonSubmit={(value, { resetForm }) => {\r\n\t\t\t\t\t\tnewMessagess(value.message);\r\n\t\t\t\t\t\tresetForm()\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t{(props) => (\r\n\t\t\t\t\t\t<Form>\r\n\t\t\t\t\t\t\t<Field name={'message'} placeholder={'write message'} />\r\n\t\t\t\t\t\t\t<button type={'submit'}>Send</button>\r\n\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Formik>\r\n\t\t\t</div>\r\n\r\n\t\t</div>\r\n\t);\r\n}\r\nexport default Dialogs;"],"sourceRoot":""}